# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
# This pipeline builds the Wpf project, runs unit tests, then saves the MSIX build artifact.
name:  WPF Continuous Integration

# Trigger on every master branch push and pull request
on:
  push:
    branches:
      -  master

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x86, x64]

    runs-on: windows-latest

    env:
      #App_Packages_Directory: AppPackages
      #SigningCertificate: GitHubActionsDemo.pfx
      Solution_Path: WPFApp-GitHubActions.sln
      #Test_Project_Path: MyWpfApp.Tests\MyWpfApp.Tests.csproj
      #Wpf_Project_Path: MyWpfApp\MyWpfApp.csproj
      #Wap_Project_Directory: MyWpfApp.Package
      #Wap_Project_Name: MyWpfApp.Package.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.302'

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.1

    # Test
    #- name: Execute Unit Tests
    #  run: dotnet test $env:Test_Project_Path

    # Restore the application
    - name:  Restore the Wpf application to populate the obj folder
      run: msbuild $env:Solution_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration
      env:
        Configuration: Debug
